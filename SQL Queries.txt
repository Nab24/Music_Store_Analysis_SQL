 show databases;
 create database MSA;
 use MSA;
 
  /* Q1: Who is the senior most employee based on job title? */

 select * from employee
 order by levels desc limit 1;
 
 /* Q2: Which countries have the most Invoices? */

select * from invoice;
SELECT COUNT(*) AS Most_Invoices, billing_country 
FROM invoice
GROUP BY billing_country
ORDER BY Most_Invoices DESC;

/* Q3: What are top 3 values of total invoice? */

SELECT total from invoice
ORDER BY total DESC limit 3;

/* Q4: Which city has the best customers? We would like to throw a promotional Music Festival in the city we made the most money. 
Write a query that returns one city that has the highest sum of invoice totals. 
Return both the city name & sum of all invoice totals */

Select * from invoice;
select billing_city,sum(total) as Invoice_total
from invoice
group by billing_city
order by invoice_total desc 
limit 1;

/* Q5: Who is the best customer? The customer who has spent the most money will be declared the best customer. 
Write a query that returns the person who has spent the most money.*/

SELECT customer.customer_id, first_name, last_name, SUM(total) AS total_spending
FROM customer
JOIN invoice ON customer.customer_id = invoice.customer_id
GROUP BY customer.customer_id
ORDER BY total_spending DESC
LIMIT 1;


/* Q1: Write query to return the email, first name, last name, & Genre of all Rock Music listeners. 
Return your list ordered alphabetically by email starting with A. */

select distinct email, first_name,last_name from customer
Join invoice On customer.customer_id=invoice.invoice_id
Join invoice_line on invoice.invoice_id=invoice_line.invoice_id
Join track on track.track_id = invoice_line.track_id
Join genre on genre.genre_id = track.genre_id
Where genre.name like 'Rock'
Order By email;

/* Q3: Return all the track names that have a song length longer than the average song length. 
Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first. */
 
 select * from Track;
 Select name, milliseconds from track
 where milliseconds>(Select avg(milliseconds) as Avg_track_length from track)
 order by milliseconds desc;
 
 
 /* Q1: We want to find out the most popular music Genre for each country. We determine the most popular genre as the genre 
with the highest amount of purchases. Write a query that returns each country along with the top Genre. For countries where 
the maximum number of purchases is shared return all Genres. */

select * from genre;
select * from customer;
select * from invoice_line;
WITH popular_genre AS 
(
    Select COUNT(invoice_line.quantity) as purchases, customer.country, genre.name, genre.genre_id, 
	ROW_NUMBER() OVER(PARTITION BY customer.country order by COUNT(invoice_line.quantity) DESC) as RowNo 
    from invoice_line 
	Join invoice on invoice.invoice_id = invoice_line.invoice_id
	Join customer on customer.customer_id = invoice.customer_id
	Join track on track.track_id = invoice_line.track_id
	Join genre on genre.genre_id = track.genre_id
	Group by 2,3,4
	Order by 2 ASC, 1 DESC
)
Select * from popular_genre where RowNo <= 1


/* Q2: Write a query that determines the customer that has spent the most on music for each country. 
Write a query that returns the country along with the top customer and how much they spent. 
For countries where the top amount spent is shared, provide all customers who spent this amount. */

WITH Customter_with_country as (
		Select customer.customer_id,first_name,last_name,billing_country,SUM(total) as total_spending,
	    ROW_NUMBER() OVER(PARTITION BY billing_country order by SUM(total) DESC) as RowNo 
		from invoice
		join customer on customer.customer_id = invoice.customer_id
		group by 1,2,3,4
		order by 5 desc)
select * from Customter_with_country where RowNo <= 1;